{"version":3,"sources":["reportWebVitals.js","Todo.js","AddTodo.js","app-config.js","service/ApiService.js","App.js","Login.js","SignUp.js","AppRouter.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Todo","props","_useState","useState","item","_useState2","Object","slicedToArray","setItem","editItem","_useState3","_useState4","readOnly","setReadOnly","deleteItem","react_default","a","createElement","ListItem","Checkbox","checked","done","onChange","target","ListItemText","InputBase","inputProps","aria-label","onClick","onKeyDown","key","objectSpread","title","value","type","id","name","multiline","fullwidth","ListItemSecondaryAction","IconButton","DeleteOutlined_default","AddTodo","console","log","addItem","onButtonClick","Grid","container","style","marginTop","xs","md","paddingRight","TextField","placeholder","fullWidth","onKeyPress","Button","height","color","variant","hostname","window","location","API_BASE_URL","concat","call","api","method","request","headers","Headers","Content-Type","accessToken","localStorage","getItem","append","options","url","body","JSON","stringify","fetch","response","status","json","href","Error","catch","error","signout","App","items","setItems","loading","setLoading","useEffect","data","todoItems","length","Paper","margin","List","map","src_Todo","navigationBar","AppBar","position","Toolbar","justifyContent","Typography","raised","todoListPage","Container","maxWidth","src_AddTodo","className","content","Login","component","spacing","noValidate","onSubmit","event","preventDefault","FormData","username","get","password","token","required","label","autoComplete","react_router_dom","to","SignUp","userDTO","autoFocus","justify","Copyright","align","Date","getFullYear","AppRouter","react_router","path","element","src_App","src_Login","src_SignUp","Box","mt","document","getElementById","createRoot","render","src_AppRouter","tab"],"mappings":"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","file":"static/js/main.f8a11f34.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState } from \"react\";\r\nimport { \r\n    ListItem, \r\n    ListItemText, \r\n    InputBase, \r\n    Checkbox,\r\n    ListItemSecondaryAction,\r\n    IconButton, \r\n}  from \"@mui/material\";\r\nimport DeleteOutlined from \"@mui/icons-material/DeleteOutlined\";\r\n\r\n\r\n\r\n\r\n\r\nconst Todo = (props) => {\r\n    const [item, setItem] = useState(props.item);\r\n\r\n    const checkboxEventHandler = (e) => {\r\n        item.done = e.target.checked;\r\n        editItem(item);\r\n    }\r\n\r\n    const editItem = props.editItem;\r\n    const editEventHandler = (e) => {\r\n        setItem({...item, title: e.target.value});\r\n    };\r\n\r\n    //turnOnReadOnly 작성\r\n    const turnOnReadOnly = (e) => {\r\n        if (e.key === 'Enter' && readOnly === false){\r\n            setReadOnly(true);\r\n            editItem(item);\r\n        }\r\n    }\r\n    // readOnly 상태 변수 추가 \r\n    const [readOnly, setReadOnly] = useState(true);\r\n    \r\n    // turnOffReadOnly() 함수 추가\r\n    const turnOffReadOnly = () => {\r\n        setReadOnly(false);\r\n    }\r\n\r\n\r\n  \r\n\r\n\r\n    const deleteItem = props.deleteItem;\r\n    \r\n    // deleteEventHandler 작성\r\n    const deleteEventHandler = () => {\r\n        deleteItem(item);\r\n    };\r\n\r\n    return (\r\n        <ListItem>\r\n            <Checkbox checked={item.done} onChange={checkboxEventHandler} />\r\n            <ListItemText>\r\n                <InputBase\r\n                    inputProps={{ \r\n                        \"aria-label\": \"naked\", \r\n                        readOnly: readOnly}}\r\n                    onClick={turnOffReadOnly}\r\n                    onKeyDown={turnOnReadOnly}\r\n                    onChange={editEventHandler}\r\n                    type=\"text\"\r\n                    id={item.id}\r\n                    name={item.id}\r\n                    value={item.title}\r\n                    multiline={true}\r\n                    fullwidth={true}\r\n                 />\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n                <IconButton aria-label=\"Delete Todo\"\r\n                    onClick={deleteEventHandler} >\r\n                    <DeleteOutlined />\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n\r\n\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport { Button, Grid, TextField } from \"@mui/material\"\r\n\r\nconst AddTodo = (props) => {\r\n    // 사용자의 입력을 저장할 오브젝트\r\n    console.log(\"AddTodo 실행\");\r\n\r\n    const [item, setItem] = useState({ title: \"\"});\r\n    const addItem = props.addItem;\r\n\r\n    // onButtonClick 함수작성\r\n    const onButtonClick = () => {\r\n        console.log(\"onButtonClick 실행\");\r\n        addItem(item); // addItem 함수 사용\r\n        setItem({ title: \"\" });\r\n    }\r\n\r\n    // enterKeyEventHandler 함수\r\n    const enterKeyEventHandler = (e) => {\r\n        console.log(\"enterKeyEventHandler 실행\");\r\n        if(e.key === 'Enter') {\r\n            onButtonClick();\r\n        }\r\n    }\r\n\r\n    // onInputChange 함수작성\r\n    const onInputChange = (e) => {\r\n        console.log(\"onInputChange 실행\");\r\n\r\n        setItem({title: e.target.value});\r\n        console.log(item);\r\n    }\r\n    // onInputChange 함수 TextField에 연결\r\n    return (\r\n        <Grid container style={{ marginTop: 20 }}>\r\n            <Grid xs={11} md={11} item style={{ paddingRight: 16 }}>\r\n                <TextField placeholder=\"Add Todo here\" fullWidth \r\n                onChange={onInputChange} \r\n                onKeyPress={enterKeyEventHandler}\r\n                value={item.title}\r\n                />\r\n            </Grid>\r\n            <Grid xs={1} md={1} item>\r\n                <Button fullWidth style={{ height: '100%' }} color=\"secondary\" \r\n                variant=\"outlined\" onClick={onButtonClick}>\r\n                    +\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AddTodo;","let backendHost;\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nif (hostname ===\"localhost\") {\r\n  backendHost = \"http://localhost:8082\";\r\n} else { \r\n  backendHost = \"http://prod-todo-api-service-test.ap-northeast-2.elasticbeanstalk.com\";\r\n}\r\n\r\nexport const API_BASE_URL = `${backendHost}`;","import { API_BASE_URL } from \"../app-config\";\r\n\r\nexport function call(api, method, request) {\r\n  let headers= new Headers({\r\n    \"Content-Type\": \"application/json\",\r\n  });\r\n\r\n  //로컬 스토리지에서 ACCESS TOKEN 가져오기\r\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\r\n  if(accessToken && accessToken !== null){\r\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\r\n  }\r\n\r\n\r\n  let options = {\r\n    headers: headers,\r\n    url: API_BASE_URL + api,\r\n    method: method,\r\n  };\r\n  if (request) {\r\n    // GET method\r\n    options.body = JSON.stringify(request);\r\n  }\r\n  return fetch(options.url, options).then((response) => {\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    } else if(response.status === 403) {\r\n      window.location.href = \"/login\"; // redirect\r\n    } else {\r\n      new Error(response);\r\n    }\r\n  }).catch((error) => {\r\n    console.log(\"http error\");\r\n    console.log(error);\r\n  });\r\n\r\n\r\n}\r\n\r\n\r\nexport function signin(userDTO) {\r\n  return call(\"/auth/signin\", \"POST\", userDTO)\r\n    .then((response) => {\r\n      //console.log(\"response : \", response);\r\n      //alert(\"로그이 토큰: \" + response.token);\r\n      if(response.token){\r\n        // 로컬 스토리지에 토큰 저장\r\n        localStorage.setItem(\"ACCESS_TOKEN\", response.token);\r\n        //token에 존재하는 경우 Todo 화면으로 리디렉트\r\n        window.location.href = \"/\";\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function signout() {\r\n  localStorage.setItem(\"ACCESS_TOKEN\", null);\r\n  window.location.href = \"/login\";\r\n}\r\n\r\nexport function signup(userDTO) {\r\n  return call(\"/auth/signup\",\"POST\",userDTO);\r\n}","import \"./App.css\";\r\nimport Todo from \"./Todo\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { \r\n  Container,\r\n  List,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n   } from \"@mui/material\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport { call, signout } from \"./service/ApiService\";\r\n\r\nfunction App() {\r\n  console.log(\"Appjs 실행\");\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] =useState(true);\r\n\r\n  useEffect(() => {\r\n    call(\"/todo\", \"GET\", null).then((response) => {\r\n      setItems(response.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const addItem = (item) => {\r\n    call(\"/todo\", \"POST\", item)\r\n    .then((response) => setItems(response.data));\r\n  };\r\n\r\n  const editItem = (item) => {\r\n    call(\"/todo\", \"PUT\", item)\r\n    .then((response) => setItems(response.data));\r\n  };\r\n\r\n  const deleteItem = (item) => {\r\n    call(\"/todo\", \"DELETE\", item)\r\n    .then((response) => setItems(response.data));\r\n  };\r\n\r\n  let todoItems = items.length > 0 && (\r\n    <Paper style={{ margin: 16 }}>\r\n      <List>\r\n        {items.map((item) => (\r\n          <Todo\r\n            item={item}\r\n            key={item.id}\r\n            editItem={editItem}\r\n            deleteItem={deleteItem}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n  \r\n  // navigationBar추가\r\n  let navigationBar = (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Grid justifyContent=\"space-between\" container>\r\n          <Grid item>\r\n            <Typography variant=\"h6\">오늘의 할일</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button color=\"inherit\" raised onClick={signout}>\r\n              로그아웃\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n\r\n// 로딩중이 아닐 때 렌더링할 부분\r\nlet todoListPage = (\r\n  <div>\r\n  {navigationBar} {/* 네비게이션 바 렌더링 */}\r\n  <Container maxWidth=\"md\">\r\n    <AddTodo addItem={addItem} />\r\n    <div className=\"TodoList\">{todoItems}</div>\r\n  </Container>\r\n</div>\r\n);\r\n\r\n// 로딩중일 때 렌더링 할 부분\r\nlet loadingPage = <h1> 로딩중.. </h1>;\r\nlet content = loadingPage;\r\nif(!loading) {\r\n  // 로딩중이 아니면 todoListPage를 선택\r\n  content = todoListPage;\r\n}\r\n\r\n// 선택한 content 렌더링\r\n\r\n    return <div className=\"App\">{content}</div>\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport { Container, Grid, Typography, TextField, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signin } from \"./service/ApiService\"\r\n\r\nfunction Login() {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const username = data.get(\"username\");\r\n        const password = data.get(\"password\");\r\n        //ApiService의 signin 메서드를 사용해 로그인.\r\n        signin({ username: username, password: password });\r\n\r\n    };\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: \"8%\" }}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        로그인\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <form noValidate onSubmit={handleSubmit}>\r\n                {\" \"}\r\n                {/* submit 버튼을 누르면 handleSubmit이 실행됨 */}\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"아아디\"\r\n                            name=\"username\"\r\n                            autoComplete=\"username\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"패스워드\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n                            로그인\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link to=\"/signup\" variant=\"body2\">\r\n                            계정이 없습니까? 여기서 가입하세요.\r\n                        </Link>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Container, Grid, TextField, Button, Typography } from \"@mui/material\";\r\nimport { signup } from \"./service/ApiService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SignUp() {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // 오브젝트에서 form에 저장된 데이터를 맵의 형태로 바꿔줌.\r\n        const data =  new FormData(event.target);\r\n        const username = data.get(\"username\");\r\n        const password = data.get(\"password\");\r\n        signup({ username: username, password: password}).then(\r\n            (response) => {\r\n                // 계정 생성 성공 시 login 페이지로 리디렉트\r\n                window.location.href = \"/login\";\r\n            }\r\n        );\r\n\r\n\r\n    };\r\n\r\nreturn (\r\n    <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: \"8%\"}}>\r\n        <form noValidate onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        계정 생성\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"username\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"아이디\"\r\n                        autoFocus\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"패스워드\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        계정 생성    \r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                    <Link to=\"/login\" variant=\"body2\">\r\n                        이미 계정이 있습니까? 로그인하세요.\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </form>\r\n    </Container>\r\n);\r\n\r\n\r\n};\r\n\r\n\r\nexport default SignUp","import React from \"react\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUp\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { Typography, Box } from \"@mui/material\"\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright\"}\r\n            fsoftwareengineer, {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>    \r\n\r\n    );\r\n}\r\n\r\nfunction AppRouter() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<App />} />\r\n                    <Route path=\"login\" element={<Login />} />\r\n                    <Route path=\"signup\" element={<SignUp />} />\r\n                </Routes>\r\n            </BrowserRouter>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createRoot } from 'react-dom/client';\r\nimport AppRouter from './AppRouter';\r\n\r\nconst container = document.getElementById('root');\r\n\r\nconst root = createRoot(container);\r\n\r\nroot.render(<AppRouter tab=\"home\" />);\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n/*\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n*/\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}